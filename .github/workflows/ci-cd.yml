name: Build, Test and Deploy
# Controls when the action will run. Triggers the workflow on push
on:
  push:
    branches:
      - "*"
# A workflow run is made up of one or more jobs that can run sequentially or parallel
jobs:
  # The first job in this workflow is named build-image
  build:
    # Type of runner that the job wll run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - Checkout Github Repository
        uses: actions/checkout@v3
      # The BuildKit Cache
      - name: Step 2 - Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Push to Docker Engine
      - name: Step 3 - Build Image & Export to Docker Engine
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: nblocks-angular-plugin:latest
          target: test
          outputs: type=docker,dest=/tmp/nblocks-angular-plugin.tar
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
  deploy:
    needs: [build]
    if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      # Checkout Github Repository
      - name: Step 1 - Checkout Github Repository
        uses: actions/checkout@v3
      # The BuildKit Cache
      - name: Step 2 - Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      # If push and to master, then build the image and run it with npm run npm-publish
      - name: Step 3 - Build Image and Export to Docker Engine
        uses: docker/build-push-action@v2
        with:
          push: false
          load: true
          tags: ${{ github.run_id }}
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
      # Run container using the image above and run the publish script
      - name: Step 4 - Publish package to the npm
        run: |
          docker run -e NPM_TOKEN=${{ secrets.NPM_TOKEN }} --rm ${{ github.run_id }} /bin/bash -c "sh ./publish.sh; npm run publish-ionic"
